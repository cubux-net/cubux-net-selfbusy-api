openapi: 3.0.0

info:
  title: Cubux.net SelfBusy sync API
  description:
    API to sync SelfBusy client with cubux.net server.
    [Documentation](https://cubux-net.github.io/cubux-net-selfbusy-api/).
  version: '2.0'

servers:
  - url: 'https://test.cubux.net/api/v2/selfbusy/sync'
    description: Test API server
  - url: 'https://app.cubux.net/api/v2/selfbusy/sync'
    description: Production API server (no release yet)

tags:
  - name: team
    description: Team data

paths:
  /team/{teamUuid}:
    get:
      parameters:
        - $ref: '#/components/parameters/teamUuid_path'
      operationId: teamSnapshot
      tags:
        - team
      security:
        - bearerAuth: []
      summary: Team data snapshot
      responses:
        '200':
          description: Actual data given from server cache
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Sync.ResponseData'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Cubux.Team.Snapshot'
        '202':
          $ref: '#/components/responses/202'
        '304':
          $ref: '#/components/responses/304'
        '401':
          $ref: '#/components/responses/401'
        '403':
          description: Access denied to underlying team
        '404':
          description: Team not found
    post:
      parameters:
        - $ref: '#/components/parameters/teamUuid_path'
      operationId: teamUpdate
      tags:
        - team
      security:
        - bearerAuth: []
      summary: Team data update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cubux.Team.Patch'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '403':
          description: Access denied to underlying team
        '404':
          description: Team not found
        '422':
          $ref: '#/components/responses/422-patch'

  /team/{teamUuid}/since/{revisionUuid}:
    get:
      parameters:
        - $ref: '#/components/parameters/teamUuid_path'
        - $ref: '#/components/parameters/revisionUuid_path'
      operationId: teamDiff
      tags:
        - team
      security:
        - bearerAuth: []
      summary: Team data diff
      description: Get changes diff since specified base revision
      responses:
        '200':
          description: Actual data given from server cache
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Sync.ResponseData'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Cubux.Team.Diff'
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '304':
          $ref: '#/components/responses/304'
        '401':
          $ref: '#/components/responses/401'
        '403':
          description: Access denied to underlying team
        '404':
          description: Team or base revision was not found
        '410':
          $ref: '#/components/responses/410-diff'

  /team/{teamUuid}/ticket/{ticketUuid}:
    get:
      parameters:
        - $ref: '#/components/parameters/teamUuid_path'
        - $ref: '#/components/parameters/ticketUuid_path'
      operationId: teamTicket
      tags:
        - team
      security:
        - bearerAuth: []
      summary: Get ticket details
      responses:
        '200':
          description: Ticket details
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Sync.ResponseTicketDetails'
                  - type: object
                    properties:
                      data:
                        oneOf:
                          - $ref: '#/components/schemas/Cubux.Team.Snapshot'
                          - $ref: '#/components/schemas/Cubux.Team.Diff'
                          - $ref: '#/components/schemas/null'
        '401':
          $ref: '#/components/responses/401'
        '403':
          description: Access denied to underlying team
        '404':
          description: Team or ticket was not found
        '410':
          $ref: '#/components/responses/410-ticket'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  parameters:
    teamUuid_path:
      in: path
      name: teamUuid
      schema:
        type: string
        format: uuid
      required: true

    revisionUuid_path:
      in: path
      name: revisionUuid
      schema:
        type: string
        format: uuid
      required: true

    ticketUuid_path:
      in: path
      name: ticketUuid
      schema:
        type: string
        format: uuid
      required: true

  schemas:
    null:
      type: object
      description: Just `null` value. This a a stub for OpenAPI/3.1 `"null"` type.
      nullable: true
      default: null
      example: null

    ValidationError:
      type: object
      properties:
        field:
          type: string
          description: Field name in the request body
        message:
          type: string
          description: Error message
      required:
        - message

    ValidationErrors:
      type: array
      items:
        $ref: '#/components/schemas/ValidationError'

    Sync.ErrorMessage:
      type: object
      properties:
        level:
          type: string
        code:
          type: string
        message:
          type: string

    Sync.ObjectErrors:
      type: object
      properties:
        section:
          type: string
        entry:
          type: string
          nullable: true
        key:
          oneOf:
            - type: string
            - type: array
              items:
                oneOf:
                  - type: string
                  - type: integer
                  - type: object
          nullable: true
        attribute:
          type: string
          nullable: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Sync.ErrorMessage'

    Sync.Ticket:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - new
            - work
            - done
            - failed
            - aborted
        status_changed_at:
          type: string
          format: date-time
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Sync.ObjectErrors'
        client_id:
          type: string
          nullable: true
        client_serial:
          type: integer
          format: int64
          nullable: true
      example:
        uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at: '2020-06-01T12:34:56Z'
        status: done
        status_changed_at: '2020-06-01T12:35:37Z'
        errors: []
        client_id: null
        client_serial: null

    Sync.Data:
      type: object
      properties:
        revision:
          type: string
          format: uuid
        serial:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
        objects:
          type: object

    Sync.DataDiff:
      allOf:
        - $ref: '#/components/schemas/Sync.Data'
        - type: object
          properties:
            base_revision:
              type: string
              format: uuid
            deleted_objects:
              type: object

    Sync.DataPatch:
      type: object
      properties:
        objects:
          type: object
          nullable: true
          description:
            Dictionary with created and updated objects. An empty entity
            properties (t.i. top level properties related to a kind of an
            object) may be omitted.
        deleted_objects:
          type: object
          nullable: true
          description:
            Dictionary with objects deletion info. An empty entity
            properties (t.i. top level properties related to a kind of an
            object) may be omitted.
        serial:
          type: integer
          format: int64
          nullable: true
          default: null
          description:
            Optional number for developer's purpose. This value will fill the
            `client_serial` field in corresponding ticket. A good usage example
            is to provide client build number to be able to identify the client
            version (this may help to link known and new bugs with client
            version with help of our Control Panel).
      description:
        At least one of `objects` and `deleted_objects` must be non-empty
        object. Another at the same time can be either `null`, an empty object
        or omitted.

    Sync.ResponseTicketCreated:
      type: object
      properties:
        ticket:
          $ref: '#/components/schemas/Sync.Ticket'
        data:
          $ref: '#/components/schemas/null'

    Sync.ResponseTicketDetails:
      type: object
      properties:
        ticket:
          $ref: '#/components/schemas/Sync.Ticket'
        data:
          oneOf:
            - $ref: '#/components/schemas/Sync.Data'
            - $ref: '#/components/schemas/Sync.DataDiff'
            - $ref: '#/components/schemas/null'
          description:
            Type depends of the ticket `status` and original request, which did
            produce the ticket. Is case of Patch request `data` will always be
            `null`. When ticket `status` is `"done"`, `data` will contain data,
            which was originally requested for Snapshot or Diff requests.
            Otherwise `data` will be `null`.

    Sync.ResponseData:
      type: object
      properties:
        ticket:
          $ref: '#/components/schemas/null'
        data:
          $ref: '#/components/schemas/Sync.Data'

    UuidKey:
      oneOf:
        - type: string
          format: uuid
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
          required:
            - uuid

    UuidKeysList:
      type: array
      items:
        $ref: '#/components/schemas/UuidKey'
      example:
        - 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - 26854f64-7427-4389-b273-839438462854

    Cubux.OperationSide:
      type: integer
      enum:
        - 0
        - 1
      description: >
        `0` - "in" - increase underlying amount/quantity; `1` - "out" -
        decrease underlying amount/quantity.

    Cubux.BaseOperation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        doc_uuid:
          type: string
          format: uuid
        side:
          $ref: '#/components/schemas/Cubux.OperationSide'
        amount:
          type: number
          minimum: 0.01
      required:
        - doc_uuid
        - side
        - amount

    Cubux.CapitalOperation:
      allOf:
        - $ref: '#/components/schemas/Cubux.BaseOperation'
        - type: object
          properties:
            category_uuid:
              type: string
              format: uuid
              description:
                Target category must be with `type` = `"income"`, `is_service` =
                `false`.
            quantity:
              type: number
              minimum: 1e-10
          required:
            - category_uuid
            - quantity
          description: >
            Objects of this type are always have `side` = `0` (in), but are always
            symmetrical in a document: both `in` and `out`.

    Cubux.Customer:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: John Random
        phone:
          type: string
          maxLength: 64
          example: +7 000 123-45-56
        email:
          type: string
          format: email
          maxLength: 128
          example: john.random@example.org
        address:
          type: string
          maxLength: 1000
        comment:
          type: string
          maxLength: 1000
        is_hidden:
          type: boolean
          default: false
      required:
        - name

    Cubux.Document:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - fabricate_to_store
            - general_expense
            - general_income
            - material_buy
            - material_dispose
            #- material_remove
            - order_add_service
            - order_add_stored_product
            - order_create
            - order_dispose_product
            - order_income
            - order_product_close
            - order_product_fabricate
            - order_product_to_store
            #- order_service_close
            - stored_product_dispose
            - stored_product_sell
        datetime:
          type: string
          format: 'date-time'
      required:
        - uuid
        - type

    Cubux.MaterialOperation:
      allOf:
        - $ref: '#/components/schemas/Cubux.BaseOperation'
        - type: object
          properties:
            material_uuid:
              type: string
              format: uuid
            unit_uuid:
              type: string
              format: uuid
            quantity:
              type: number
              minimum: 1e-10
          required:
            - material_uuid
            - unit_uuid
            - quantity

    Cubux.MaterialSource:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 128
          example: Milk
        is_hidden:
          type: boolean
          default: false
      required:
        - name
      description:
        Material as uncountable resource. Used for suggestions and relations
        with other objects.

    Cubux.MeasureUnit:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 32
          example: g
        source_uuid:
          type: string
          format: uuid
          nullable: true
          default: null
          description:
            Optional link to `Cubux.MaterialSource`. When assigned, this unit
            can be used only for specific source material.
        eq_unit_uuid:
          type: string
          format: uuid
          nullable: true
          default: null
          description:
            'Optional link to base unit. Example: a kilogram should be linked to
            1000 gram.'
        eq_value:
          type: number
          minimum: 1e-10
          maximum: 9e9
          nullable: true
          default: null
          example: 2.5
          description:
            Quantity of base unit when `eq_unit_uuid` assigned.
        is_hidden:
          type: boolean
          default: false
      required:
        - name
      description:
        Measure unit.

    Cubux.Order:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        title:
          type: string
          minLength: 1
          maxLength: 128
          example: 'Order #42'
        customer_uuid:
          type: string
          format: uuid
          nullable: true
          default: null
        project_uuid:
          type: string
          format: uuid
          nullable: true
          default: null
        created_at:
          type: string
          format: 'date-time'
      required:
        - title

#    Cubux.OrderPosition:
#      type: object
#      properties:
#        uuid:
#          type: string
#          format: uuid
#        order_uuid:
#          type: string
#          format: uuid
#        category_uuid:
#          type: string
#          format: uuid
#        price:
#          type: number
#          minimum: 0.01
#        quantity:
#          type: number
#          minimum: 1e-10
#        sort:
#          type: integer
#          minimum: 0
#          maximum: 65535
#          default: 0
#      required:
#        - order_uuid
#        - category_uuid
#        - price
#        - quantity

    Cubux.OrderPayOperation:
      allOf:
        - $ref: '#/components/schemas/Cubux.BaseOperation'
        - type: object
          properties:
            order_uuid:
              type: string
              format: uuid
          required:
            - order_uuid

    Cubux.OrderProductOperation:
      allOf:
        - $ref: '#/components/schemas/Cubux.BaseOperation'
        - type: object
          properties:
            order_uuid:
              type: string
              format: uuid
            category_uuid:
              type: string
              format: uuid
              description:
                Target category must be with `type` = `"income"`.
            quantity:
              type: number
              minimum: 1e-10
          required:
            - order_uuid
            - category_uuid
            - quantity

    Cubux.OrderSellOperation:
      allOf:
        - $ref: '#/components/schemas/Cubux.BaseOperation'
        - type: object
          properties:
            order_uuid:
              type: string
              format: uuid
            category_uuid:
              type: string
              format: uuid
              description:
                Target category must be with `type` = `"income"`.
            quantity:
              type: number
              minimum: 1e-10
          required:
            - order_uuid
            - category_uuid
            - quantity

    Cubux.ProductOperation:
      allOf:
        - $ref: '#/components/schemas/Cubux.BaseOperation'
        - type: object
          properties:
            category_uuid:
              type: string
              format: uuid
              description:
                Target category must be with `type` = `"income"`, `is_service` =
                `false`.
            quantity:
              type: number
              minimum: 1e-10
          required:
            - category_uuid
            - quantity

    Cubux.SelfAccount:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: Foo bar
        sort:
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
        is_hidden:
          type: boolean
          default: false
      required:
        - name

    Cubux.SelfAccountOperation:
      allOf:
        - $ref: '#/components/schemas/Cubux.BaseOperation'
        - type: object
          properties:
            account_uuid:
              type: string
              format: uuid
          required:
            - account_uuid

    Cubux.SelfCategory:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/Cubux.TurnoverType'
          #allOf:
          #  - $ref: '#/components/schemas/Cubux.TurnoverType',
          #  - {}
        parent_uuid:
          type: string
          format: uuid
          nullable: true
          default: null
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: Lorem ipsum
        limit:
          type: number
          minimum: 0
        cost:
          type: number
          minimum: 0
          description:
            Default cost value to use whe create a transaction with this
            category. Applies only when `type` is `"income"`.
        is_service:
          type: boolean
          default: false
          description:
            Whether it describes a good or a service. Applies only when `type`
            is `"income"`.
        sort:
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
        is_hidden:
          type: boolean
          default: false
      required:
        - type
        - name

    Cubux.SelfCategorySpecification:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        category_uuid:
          type: string
          format: uuid
        specification_uuid:
          type: string
          format: uuid
        quantity:
          type: number
          default: 1
          minimum: 0.001
      required:
        - category_uuid
        - specification_uuid

    Cubux.SelfCategoryLinkKey:
      type: object
      properties:
        income_uuid:
          type: string
          format: uuid
          description:
            Income category UUID
        expense_uuid:
          type: string
          format: uuid
          description:
            Expense category UUID
      required:
        - income_uuid
        - expense_uuid

    Cubux.SelfCategoryLink:
      allOf:
        - $ref: '#/components/schemas/Cubux.SelfCategoryLinkKey'
        - description:
            A link between specific income and expense categories.

    Cubux.SelfCategoryOperation:
      allOf:
        - $ref: '#/components/schemas/Cubux.BaseOperation'
        - type: object
          properties:
            category_uuid:
              type: string
              format: uuid
          required:
            - category_uuid

    Cubux.SelfProject:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: Lorem ipsum
      required:
        - name

    Cubux.Specification:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 128
          example: Cookies XYZ
        sort:
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
        is_hidden:
          type: boolean
          default: false
      required:
        - name
      description:
        A receipt describing ingredients to create specific product out of
        source materials.

    Cubux.SpecificationIngredient:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        specification_uuid:
          type: string
          format: uuid
          description:
            Specification `Cubux.Specification` to which this belongs to.
            Can only be assigned to new object and cannot be changed later.
        source_uuid:
          type: string
          format: uuid
          description:
            Which source material `Cubux.MaterialSource` it describes.
        unit_uuid:
          type: string
          format: uuid
          description:
            Which measure unit `Cubux.MeasureUnit` use. Measure unit either
            must not be linked to any source material or must be linked to same
            source material as this ingredient itself.
        quantity:
          type: number
          minimum: 1e-10
          maximum: 9e9
          example: 350
        sort:
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
      required:
        - specification_uuid
        - source_uuid
        - unit_uuid
        - quantity
      description:
        An ingredient describing quantity of one specific material to consume.

    Cubux.TurnoverType:
      type: string
      enum:
        - income
        - expense

    Cubux.Team.Objects:
      type: object
      properties:
        account:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.SelfAccount'
        account_operation:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.SelfAccountOperation'
        capital_operation:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.CapitalOperation'
        category:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.SelfCategory'
        category_link:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.SelfCategoryLink'
        category_operation:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.SelfCategoryOperation'
        category_specification:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.SelfCategorySpecification'
        customer:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.Customer'
        document:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.Document'
        material_operation:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.MaterialOperation'
        material_source:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.MaterialSource'
        measure_unit:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.MeasureUnit'
        order:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.Order'
        order_pay_operation:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.OrderPayOperation'
#        order_position:
#          type: array
#          items:
#            $ref: '#/components/schemas/Cubux.OrderPosition'
        order_product_operation:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.OrderProductOperation'
        order_sell_operation:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.OrderSellOperation'
        product_operation:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.ProductOperation'
        project:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.SelfProject'
        specification:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.Specification'
        specification_ingredient:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.SpecificationIngredient'

    Cubux.Team.DeletionsPatch:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/UuidKeysList'
        account_operation:
          $ref: '#/components/schemas/UuidKeysList'
        capital_operation:
          $ref: '#/components/schemas/UuidKeysList'
        category:
          $ref: '#/components/schemas/UuidKeysList'
        category_link:
          type: array
          items:
            $ref: '#/components/schemas/Cubux.SelfCategoryLinkKey'
        category_operation:
          $ref: '#/components/schemas/UuidKeysList'
        category_specification:
          $ref: '#/components/schemas/UuidKeysList'
        customer:
          $ref: '#/components/schemas/UuidKeysList'
        document:
          $ref: '#/components/schemas/UuidKeysList'
        material_operation:
          $ref: '#/components/schemas/UuidKeysList'
        material_source:
          $ref: '#/components/schemas/UuidKeysList'
        measure_unit:
          $ref: '#/components/schemas/UuidKeysList'
        order:
          $ref: '#/components/schemas/UuidKeysList'
        order_pay_operation:
          $ref: '#/components/schemas/UuidKeysList'
#        order_position:
#          $ref: '#/components/schemas/UuidKeysList'
        order_product_operation:
          $ref: '#/components/schemas/UuidKeysList'
        order_sell_operation:
          $ref: '#/components/schemas/UuidKeysList'
        product_operation:
          $ref: '#/components/schemas/UuidKeysList'
        project:
          $ref: '#/components/schemas/UuidKeysList'
        specification:
          $ref: '#/components/schemas/UuidKeysList'
        specification_ingredient:
          $ref: '#/components/schemas/UuidKeysList'

    Cubux.Team.Deletions:
      allOf:
        - $ref: '#/components/schemas/Cubux.Team.DeletionsPatch'
        - type: object
          properties: {}

    Cubux.Team.Snapshot:
      allOf:
        - $ref: '#/components/schemas/Sync.Data'
        - type: object
          properties:
            objects:
              $ref: '#/components/schemas/Cubux.Team.Objects'

    Cubux.Team.Diff:
      allOf:
        - $ref: '#/components/schemas/Sync.DataDiff'
        - $ref: '#/components/schemas/Cubux.Team.Snapshot'
        - type: object
          properties:
            deleted_objects:
              $ref: '#/components/schemas/Cubux.Team.Deletions'

    Cubux.Team.Patch:
      allOf:
        - $ref: '#/components/schemas/Sync.DataPatch'
        - type: object
          properties:
            objects:
              $ref: '#/components/schemas/Cubux.Team.Objects'
            deleted_objects:
              $ref: '#/components/schemas/Cubux.Team.DeletionsPatch'

  responses:
    202:
      description: A task enqueued, ticked created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sync.ResponseTicketCreated'

    204:
      description: There are no new changes since specified base revision.

    304:
      description:
        Client did use HTTP cache in the request and the cache is actual.

    401:
      description: Access token is missing or invalid

    410-diff:
      description:
        Specified base revision is too old. Client must to request a snapshot
        instead.

    410-ticket:
      description: Ticket outdated

    422-patch:
      description:
        Input data in the request has invalid basic structure. All error
        messages in this response are related to client developer only.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationErrors'
